name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.22.0'
      
      - name: Install golangci-lint
        run: go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest

      - name: Run golangci-lint
        run: golangci-lint run ./...

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.22.0'
          
      - name: Tidy Go modules
        run: go mod tidy

      - name: Install dependencies
        run: go mod download

      - name: Run tests with coverage
        run: go test -race -coverprofile=coverage.out -covermode=atomic ./...

      - name: Upload coverage reports
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.out
          flags: unittests

  security:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.22.0'
          
      - name: Run Gosec Security Scanner
        uses: securego/gosec@master
        with:
          args: ./...
          
      - name: Run nancy for dependency scanning
        run: |
          go install github.com/sonatype-nexus-community/nancy@latest
          go list -json -m all | nancy sleuth

  build:
    needs: [lint, test, security]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.22.0'
          
      - name: Build binaries
        run: |
          go mod download
          go build -v -o ipam
          go build -v -o validate-blocks scripts/validate_blocks.go
          
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: binaries
          path: |
            ipam
            validate-blocks

  # release:
  #   needs: [build]
  #   runs-on: ubuntu-latest
  #   if: startsWith(github.ref, 'refs/tags/')
  #   permissions:
  #     contents: write
  #   steps:
  #     - uses: actions/checkout@v4

  #     - name: Set up Go
  #       uses: actions/setup-go@v4
  #       with:
  #         go-version: '1.22.0'

  #     - name: Build binaries
  #       run: |
  #         go mod download
  #         go build -v -o ipam
  #         go build -v -o validate-blocks scripts/validate_blocks.go

  #     - name: Create release
  #       uses: softprops/action-gh-release@v1
  #       with:
  #         token: ${{ secrets.GITHUB_TOKEN }}
  #         name: Release ${{ github.ref_name }}
  #         draft: false
  #         prerelease: false
  #         generate_release_notes: true
  #         files: |
  #           ipam
  #           validate-blocks