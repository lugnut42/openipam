name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  release:
    types: [created]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          path: openipam

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.23.4

      - name: Setup workspace
        run: |
          mkdir -p $GITHUB_WORKSPACE/go/src/
          mv openipam $GITHUB_WORKSPACE/go/src/
          cd $GITHUB_WORKSPACE/go/src/openipam

      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Get dependencies
        working-directory: $GITHUB_WORKSPACE/go/src/openipam
        run: |
          go mod tidy
          go mod download

      - name: Run tests
        working-directory: $GITHUB_WORKSPACE/go/src/openipam
        run: go test -v ./...

      - name: Generate coverage report
        working-directory: $GITHUB_WORKSPACE/go/src/openipam
        run: go test -coverprofile=coverage.out ./...

      - name: Upload coverage report
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: $GITHUB_WORKSPACE/go/src/openipam/coverage.out

  release:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'release'

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          path: openipam

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.21

      - name: Setup workspace
        run: |
          mkdir -p $GITHUB_WORKSPACE/go/src/
          mv openipam $GITHUB_WORKSPACE/go/src/
          cd $GITHUB_WORKSPACE/go/src/openipam

      - name: Build binary
        working-directory: $GITHUB_WORKSPACE/go/src/openipam
        run: go build -o ipam

      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload release asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: $GITHUB_WORKSPACE/go/src/openipam/ipam
          asset_name: ipam
          asset_content_type: application/octet-stream